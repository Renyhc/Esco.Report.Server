<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ggz/4YIM//OCDP//ggz//4YP///+H/////8=
</value>
  </data>
</root>